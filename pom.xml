<?xml version="1.0"?>
<project
	xsi:schemaLocation="http://maven.apache.org/POM/4.0.0 http://maven.apache.org/xsd/maven-4.0.0.xsd"
	xmlns="http://maven.apache.org/POM/4.0.0" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">
	<modelVersion>4.0.0</modelVersion>
	<groupId>org.diveintojee</groupId>
	<artifactId>foobarquix</artifactId>
	<version>0.1-SNAPSHOT</version>
	<packaging>jar</packaging>
	<name>foobarquix</name>

	<properties>

		<!-- LOGGING -->
		<commons-logging.version>1.1.1</commons-logging.version>
		<slf4j.version>1.6.4</slf4j.version>
		<log4j.version>1.2.16</log4j.version>

		<!-- COMMONS -->
		<commons-lang.version>3.0.1</commons-lang.version>
		<commons-collections.version>3.2.1</commons-collections.version>
		<guava.version>10.0.1</guava.version>

		<!-- TEST -->
		<junit.version>4.10</junit.version>
		<mockito.version>1.9.0-rc1</mockito.version>

		<!-- BUILD -->
		<project.build.sourceEncoding>UTF-8</project.build.sourceEncoding>
		<project.reporting.outputEncoding>UTF-8</project.reporting.outputEncoding>
		<java.version>1.6</java.version>
		<maven-eclipse-plugin.version>2.8</maven-eclipse-plugin.version>
		<maven-resources-plugin.version>2.5</maven-resources-plugin.version>
		<maven-compiler-plugin.version>2.3.2</maven-compiler-plugin.version>
		<maven-surefire-plugin.version>2.10</maven-surefire-plugin.version>
		<maven-jar-plugin.version>2.3.2</maven-jar-plugin.version>
		<maven-source-plugin.version>2.1.2</maven-source-plugin.version>
		<cobertura-maven-plugin.version>2.5.1</cobertura-maven-plugin.version>

	</properties>

	<dependencyManagement>
		<dependencies>

			<!-- LOGGING -->
			<dependency>
				<groupId>org.slf4j</groupId>
				<artifactId>slf4j-api</artifactId>
				<version>${slf4j.version}</version>
			</dependency>
			<dependency>
				<groupId>org.slf4j</groupId>
				<artifactId>jcl-over-slf4j</artifactId>
				<version>${slf4j.version}</version>
			</dependency>
			<dependency>
				<groupId>org.slf4j</groupId>
				<artifactId>slf4j-log4j12</artifactId>
				<version>${slf4j.version}</version>
			</dependency>
			<dependency>
				<groupId>log4j</groupId>
				<artifactId>log4j</artifactId>
				<version>${log4j.version}</version>
				<exclusions>
					<exclusion>
						<groupId>com.sun.jdmk</groupId>
						<artifactId>jmxtools</artifactId>
					</exclusion>
					<exclusion>
						<groupId>com.sun.jmx</groupId>
						<artifactId>jmxri</artifactId>
					</exclusion>
					<exclusion>
						<groupId>javax.jms</groupId>
						<artifactId>jms</artifactId>
					</exclusion>
				</exclusions>
			</dependency>

			<!-- COMMONS -->
			<dependency>
				<groupId>org.apache.commons</groupId>
				<artifactId>commons-lang3</artifactId>
				<version>${commons-lang.version}</version>
			</dependency>
			<dependency>
				<groupId>commons-collections</groupId>
				<artifactId>commons-collections</artifactId>
				<version>${commons-collections.version}</version>
			</dependency>
			<dependency>
				<groupId>com.google.guava</groupId>
				<artifactId>guava</artifactId>
				<version>${guava.version}</version>
			</dependency>

			<!-- TEST -->
			<dependency>
				<groupId>junit</groupId>
				<artifactId>junit</artifactId>
				<version>${junit.version}</version>
				<scope>test</scope>
			</dependency>
			<dependency>
				<groupId>org.mockito</groupId>
				<artifactId>mockito-all</artifactId>
				<version>${mockito.version}</version>
				<scope>test</scope>
			</dependency>
			<dependency>
				<groupId>commons-logging</groupId>
				<artifactId>commons-logging</artifactId>
				<version>${commons-logging.version}</version>
				<scope>test</scope>
			</dependency>
		</dependencies>
	</dependencyManagement>


	<dependencies>
		<dependency>
			<groupId>junit</groupId>
			<artifactId>junit</artifactId>
		</dependency>
		<dependency>
			<groupId>org.mockito</groupId>
			<artifactId>mockito-all</artifactId>
		</dependency>
		<dependency>
			<groupId>org.apache.commons</groupId>
			<artifactId>commons-lang3</artifactId>
		</dependency>
		<dependency>
			<groupId>commons-collections</groupId>
			<artifactId>commons-collections</artifactId>
		</dependency>
		<dependency>
			<groupId>com.google.guava</groupId>
			<artifactId>guava</artifactId>
		</dependency>
		<dependency>
			<groupId>org.slf4j</groupId>
			<artifactId>slf4j-api</artifactId>
		</dependency>
		<dependency>
			<groupId>org.slf4j</groupId>
			<artifactId>jcl-over-slf4j</artifactId>
		</dependency>
		<dependency>
			<groupId>org.slf4j</groupId>
			<artifactId>slf4j-log4j12</artifactId>
		</dependency>
		<dependency>
			<groupId>log4j</groupId>
			<artifactId>log4j</artifactId>
		</dependency>
	</dependencies>

	<build>
		<pluginManagement>
			<plugins>
				<plugin>
					<groupId>org.apache.maven.plugins</groupId>
					<artifactId>maven-eclipse-plugin</artifactId>
					<version>${maven-eclipse-plugin.version}</version>
					<configuration>
						<downloadSources>true</downloadSources>
						<downloadJavadocs>true</downloadJavadocs>
					</configuration>
				</plugin>
				<plugin>
					<groupId>org.apache.maven.plugins</groupId>
					<artifactId>maven-resources-plugin</artifactId>
					<version>${maven-resources-plugin.version}</version>
					<configuration>
						<encoding>${project.build.sourceEncoding}</encoding>
					</configuration>
				</plugin>
				<plugin>
					<groupId>org.apache.maven.plugins</groupId>
					<artifactId>maven-site-plugin</artifactId>
					<version>${maven-site-plugin.version}</version>
					<configuration>
						<outputEncoding>$project.build.sourceEncoding}</outputEncoding>
					</configuration>
				</plugin>
				<plugin>
					<groupId>org.apache.maven.plugins</groupId>
					<artifactId>maven-compiler-plugin</artifactId>
					<version>${maven-compiler-plugin.version}</version>
					<configuration>
						<source>${java.version}</source>
						<target>${java.version}</target>
						<encoding>${project.build.sourceEncoding}</encoding>
					</configuration>
				</plugin>
				<plugin>
					<artifactId>maven-surefire-plugin</artifactId>
					<version>${maven-surefire-plugin.version}</version>
					<configuration>
						<excludes>
							<exclude>**/Abstract*</exclude>
						</excludes>
					</configuration>
				</plugin>
				<plugin>
					<groupId>org.apache.maven.plugins</groupId>
					<artifactId>maven-jar-plugin</artifactId>
					<version>${maven-jar-plugin.version}</version>
					<configuration>
						<archive>
							<index>true</index>
							<manifest>
								<addClasspath>true</addClasspath>
							</manifest>
						</archive>
					</configuration>
				</plugin>
				<plugin>
					<groupId>org.apache.maven.plugins</groupId>
					<artifactId>maven-source-plugin</artifactId>
					<version>${maven-source-plugin.version}</version>
					<executions>
						<execution>
							<id>attach-sources</id>
							<phase>package</phase>
							<goals>
								<goal>jar</goal>
							</goals>
						</execution>
					</executions>
				</plugin>
			</plugins>
		</pluginManagement>
		<plugins>
			<plugin>
				<groupId>org.apache.maven.plugins</groupId>
				<artifactId>maven-source-plugin</artifactId>
			</plugin>
		</plugins>
	</build>
	<profiles>
		<profile>
			<id>embedded</id>
			<properties>
				<!-- log properties -->
				<log.file.path>${project.build.directory}/explorimmo</log.file.path>
				<fr.explorimmo.log.level>debug</fr.explorimmo.log.level>

				<!-- persistence properties -->
				<javax.persistence.jdbc.driver>org.h2.Driver</javax.persistence.jdbc.driver>
				<javax.persistence.jdbc.url>jdbc:h2:mem:explorimmo-test;DB_CLOSE_DELAY=-1;DB_CLOSE_ON_EXIT=FALSE;IGNORECASE=true</javax.persistence.jdbc.url>
				<javax.persistence.jdbc.user>sa</javax.persistence.jdbc.user>
				<javax.persistence.jdbc.password/>
				<hibernate.hbm2ddl.auto>update</hibernate.hbm2ddl.auto>
				<hibernate.dialect>org.hibernate.dialect.H2Dialect</hibernate.dialect>
				<hibernate.show_sql>true</hibernate.show_sql>

				<!-- container properties -->
				<container.host>localhost</container.host>
				<container.port>9080</container.port>

				<jbehave.embeddables>**/StoriesRunner.java</jbehave.embeddables>
				<jbehave.skip>false</jbehave.skip>
				<jbehave.threads>1</jbehave.threads>
				<jbehave.storyTimeoutInSecs>10</jbehave.storyTimeoutInSecs>
				<jbehave.ignoreFailureInStories>false</jbehave.ignoreFailureInStories>
				<jbehave.meta.filters>+wip</jbehave.meta.filters>

			</properties>
			<build>
				<resources>
					<!-- Copy .properties files to output and filter them -->
					<resource>
						<directory>src/main/resources</directory>
						<filtering>true</filtering>
						<includes>
							<include>**/*.properties</include>
							<include>**/log4j.xml</include>
						</includes>
					</resource>
					<!-- Copy .xml files to output and do not filter them -->
					<resource>
						<directory>src/main/resources</directory>
						<filtering>false</filtering>
					</resource>
				</resources>
				<testResources>
					<!-- Copy .properties files to output and filter them -->
					<testResource>
						<directory>src/test/resources</directory>
						<filtering>true</filtering>
						<includes>
							<include>**/*.properties</include>
							<include>**/log4j.xml</include>
						</includes>
					</testResource>
					<!-- Copy .xml files to output and do not filter them -->
					<testResource>
						<directory>src/test/resources</directory>
						<filtering>false</filtering>
					</testResource>
				</testResources>

				<plugins>
					<!-- Runs tests that end with TestIT (database) tests -->
					<plugin>
						<groupId>org.apache.maven.plugins</groupId>
						<artifactId>maven-failsafe-plugin</artifactId>
					</plugin>
					<!-- Starts an embedded container and deploy the war to that container -->
					<plugin>
						<groupId>org.mortbay.jetty</groupId>
						<artifactId>maven-jetty-plugin</artifactId>
					</plugin>
					<!-- Runs the acceptance tests against the running container -->
					<plugin>
						<groupId>org.jbehave</groupId>
						<artifactId>jbehave-maven-plugin</artifactId>
					</plugin>
				</plugins>
			</build>
		</profile>
	</profiles>

</project>	
